#ifndef Excelsior_Ambassador_h
#define Excelsior_Ambassador_h

#include <SPI.h>
#include <TFT_22_ILI9225.h>
#include <Wire.h>

#define version "1.0.0"

#define TFT_RST 8
#define TFT_RS  9
#define TFT_CS  10  // SS
#define TFT_SDI 11  // MOSI
#define TFT_CLK 13  // SCK
#define TFT_LED 0

#define TFT_BRIGHTNESS 200 // Initial brightness of TFT backlight 

class Excelsior_Ambassador
{
  public:
    TFT_22_ILI9225 display;
    Excelsior_Ambassador();
    void setup();
    void displayUpdate();
    void drawBootScreen();
    void drawBattery(int status);
    void drawErrorTriangle();

    void decodeData(int length);
    void protocolVersion1();

    byte receivedData[32];                            //32 bytes is the maximum length of an i2c message
    static const int maxSensors = 8;                  //needs to match the number in Excelsior.h
    static const int maxSubSensors = 4;               //  ||
    static const int maxGyroscopes = 3;
    static const int maxMotors = 4;
    static const int maxErrorMessageLines = 7;
    byte protocolVersion;
    byte dataAndDisplayType;
    int sensorValues[maxSensors + maxGyroscopes + 1][maxSubSensors];  //stores the values of all sensors, the used gyroscope values and the button
    int motorValues[maxMotors];                                        //stores the values of the motors (-255,255)
    String errorMessage[maxErrorMessageLines] = {"","","","","","",""};  //number of lines
    bool errorTriangle = false;
  private:
    void _drawRoundedRect(int xs,int ys,int xe,int ye,int weight,int color);
};

const unsigned char logo [] PROGMEM = {               //BitMap of the Logo
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x07, 0xff, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xff, 0xc0, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xf0, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xf0, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0xff, 0xf8, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x07, 0xff, 0xf8, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x3f, 0xff, 0xff, 0xf8, 0x00, 0x03, 0xff, 0xfc, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xfc, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xfc, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x0f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xfe, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xfe, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00, 0x00, 0x3f, 0xfe, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 0x00, 0x3f, 0xfe, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xff, 0x00, 0x00, 0x00, 0x3f, 0xff, 
  0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x03, 0xff, 0xff, 0x00, 0x00, 0x00, 0x1f, 0xff, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 
  0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 
  0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xfe, 0x7f, 0xc0, 0x00, 0x00, 0x1f, 0xff, 
  0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xfe, 0x3f, 0xe0, 0x00, 0x00, 0x1f, 0xff, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xfc, 0x3f, 0xe0, 0x00, 0x00, 0x1f, 0xff, 
  0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x3f, 0xfc, 0x1f, 0xf0, 0x00, 0x00, 0x1f, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x3f, 0xf8, 0x1f, 0xf0, 0x00, 0x00, 0x1f, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x7f, 0xf8, 0x0f, 0xf8, 0x00, 0x00, 0x3f, 0xfe, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x7f, 0xf0, 0x0f, 0xf8, 0x00, 0x00, 0x3f, 0xfe, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0xff, 0xf0, 0x07, 0xfc, 0x00, 0x00, 0x3f, 0xfe, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x01, 0xff, 0xe0, 0x07, 0xfc, 0x00, 0x00, 0x7f, 0xfe, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x01, 0xff, 0xe0, 0x03, 0xfe, 0x00, 0x00, 0x7f, 0xfc, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x03, 0xff, 0xc0, 0x03, 0xff, 0x00, 0x00, 0xff, 0xfc, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0x07, 0xff, 0xc0, 0x03, 0xff, 0x00, 0x01, 0xff, 0xfc, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xff, 0x80, 0x03, 0xff, 0xf8, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0x80, 0x07, 0xff, 0xf8, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xc0, 0x1f, 0xff, 0xf0, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xc0, 0x7f, 0xff, 0xf0, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xff, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x01, 0xff, 0xff, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



//----Error Triangle----
#define error_width  21
#define error_height 21

const unsigned char error[] PROGMEM = {
  0xFF,0xDF,0xF8,
  0xFF,0x8F,0xF8,
  0xFF,0x8F,0xF8,
  0xFF,0x07,0xF8,
  0xFF,0x27,0xF8,
  0xFE,0x73,0xF8,
  0xFE,0x73,0xF8,
  0xFC,0xF9,0xF8,
  0xFC,0xF9,0xF8,
  0xF8,0x70,0xF8,
  0xF8,0x70,0xF8,
  0xF0,0x20,0x78,
  0xF0,0x20,0x78,
  0xE0,0x00,0x38,
  0xE0,0x00,0x38,
  0xC0,0x20,0x18,
  0xC0,0x70,0x18,
  0x80,0xF8,0x08,
  0x80,0x70,0x08,
  0x00,0x20,0x00,
  0x00,0x00,0x00
};

#define battery_width  11
#define battery_height 20
const unsigned char battery_full[] PROGMEM = {
  0xC0,0x60,
  0xDF,0x60,
  0x00,0x00,
  0x7F,0xC0,
  0x40,0x40,
  0x5F,0x40,
  0x5F,0x40,
  0x40,0x40,
  0x7F,0xC0,
  0x40,0x40,
  0x5F,0x40,
  0x5F,0x40,
  0x40,0x40,
  0x7F,0xC0,
  0x40,0x40,
  0x5F,0x40,
  0x5F,0x40,
  0x40,0x40,
  0x7F,0xC0,
  0x00,0x00
};

const unsigned char battery_half[] PROGMEM = {
  0xC0,0x60,
  0xDF,0x60,
  0x00,0x00,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x40,0x40,
  0x5F,0x40,
  0x5F,0x40,
  0x40,0x40,
  0x7F,0xC0,
  0x40,0x40,
  0x5F,0x40,
  0x5F,0x40,
  0x40,0x40,
  0x7F,0xC0,
  0x00,0x00
};

const unsigned char battery_low[] PROGMEM = {
  0xC0,0x60,
  0xDF,0x60,
  0x00,0x00,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x40,0x40,
  0x5F,0x40,
  0x5F,0x40,
  0x40,0x40,
  0x7F,0xC0,
  0x00,0x00
};

const unsigned char battery_vlow[] PROGMEM = {
  0xC0,0x60,
  0xDF,0x60,
  0x00,0x00,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x40,0x40,
  0x7F,0xC0,
  0x00,0x00
};

const unsigned char battery_empty[] PROGMEM = {
  0xC0,0x60,
  0xDF,0x60,
  0x00,0x00,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x7F,0xC0,
  0x00,0x00
};

#endif
